Project No: 0008
Project Name: VtoTProject
**********************************************
Step 1: Create project 
	django-admin startproject VtoTProject

Step 2: Enter into the project 
	cd VtoTProject

Step 3: Create django application 
	py manage.py startapp App1

Step 4: Install the application inside settings.py file 

VtoTProject/VtoTProject/settings.py
-----------------------------------------------
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'App1'
]

Step 5: Define the view function 
VtoTProject/App1/views.py
--------------------------------
from django.shortcuts import render,HttpResponse

# Create your views here.
def sample_view(request):
    return HttpResponse("<h1>This is Sample view page.</h1>")

Step 5.1:Update in Project level urls.py

from django.urls import path
from App1 import views

urlpatterns = [
    path('admin/', admin.site.urls),
    path('sample/',views.sample_view),
]

Now check ---->python manage.py runserver
             ->http://127.0.0.1:8000/sample

Step 6: Define Application level urls
VtoTProject/App1/urls.py
------------------------------
from django.urls import path
from . import views
urlpatterns = [
    path('sample/', views.sample_view),
]

Step 7: Modify in  Project level urls
VtoTProject/VtoTProject/urls.py
--------------------------------------------
from django.contrib import admin
from django.urls import path,include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('App1/',include('App1.urls')),
]

Now check ---->python manage.py runserver
             ->http://127.0.0.1:8000/App1/sample

Steps to Create Template:
----------------------------------
    --Setup the templates folder
----------------------------------
Step 8: Create Project level templates folder and inside that create AppName folder
    0008/VtoTProject>mkdir templates
    0008/VtoTProject>cd templates
    0008/VtoTProject>mkdir App1

    --Setup DIRS in settings.py
-----------------------------------
Step 9:  Navigate to project level Settings and check the DIRS option within the TEMPLATES setting to make sure it includes the path to your templates directory.
    Go to ---> 0008-->VtoTProject-->settings.py
    --import os (Add this command in top of the content in setting.py)

    TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

    --Create a template
--------------------------------------
Step 10: Now navigate to 0008-->VtoTProject-->templates-->App1
    --Create template files and add html code
    sample.html

<!DOCTYPE html>
<html>
<head>
    <title>My Template</title>
</head>
<body>
    <h1>Hello, {{ name }}!</h1>
    <p>Age: {{ age }}</p>
    <ul>
        {% for item in items %}
            <li>{{ item }}</li>
        {% endfor %}
    </ul>
</body>
</html>

    --use template in views
--------------------------------------
Step 11: Now navigate to app level views and use the render() function to load and render your templates. Pass a context dictionary to the render() function containing the data you want to display in the template.

from django.shortcuts import render

# Create your views here.
def sample_view(request):
    data = {
        'name': 'Ram',
        'age': 30,
        'items': ['Apples', 'Bananas', 'Cherries']
    }
    return render(request, 'App1/sample.html', context=data)

Now check ---->python manage.py runserver
             ->http://127.0.0.1:8000/App1/sample