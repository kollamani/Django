HTTP:
    --HTTP stands for Hyper Text Transfer Protocol, a fundamental protocol for transmitting data on the Web.
    --HTTP enables communication between clients and servers over the internet.
    --HTTP follows a classical client-server model.

Request-Response Cycle:
    http://

Request:
    Clients send HTTP requests to servers to retrieve or send data.

Response:
    Servers send HTTP responses back to clients with requested data or status information.

Hypertext:
    Hypertext consists of both standard text and hyperlinks.

Hyperlinks:
    Hyperlinks are clickable elements in documents that connect to other content, such as web pages, images, PDF files, videos, and various other resources.

Protocol:
    --A protocol is a set of rules that define how data is formatted, transmitted, and received between devices.
    --HTTP is capable of transmitting a wide range of data across the internet, including text documents, images, PDFs, audio files, video files, and other data-exchange formats like JSON and XML.

HTTP Methods
    --HTTP methods are instructions that tell a server what action to take for a specific web address (URL).

HTTP methods list :
    GET: Retrieve data.
    POST: Submit data.
    PUT: Update data.
    DELETE: Remove data.
    HEAD: Retrieve headers.
    PATCH: Apply partial update.
    OPTIONS: Check available methods.

HTTP Status Code
    --HTTP status codes are like short messages from a server telling your browser if your request was successful or if something went wrong.

Types of HTTP status code:
    1xx: Informational (Got It!)- Server received your request and is working on it.

    2xx: Success (All Good!)- Request successful, everything went smoothly.

    3xx: Redirection (Hold On!)- Need to take another step (e.g., redirect) before completing the request.

    4xx: Client Error(Oops!)- There's an error in your request (e.g., 404 Not Found).

    5xx: Server Error(Uh Oh!)- The server encountered an error on its end.

HTTP vs HTTPS
    --HTTP sends data over the internet without encryption, whereas HTTPS uses encryption to securely transmit data.
    --HTTPS protect sensitive information such as passwords and bank details.
    --HTTPS acts like a bodyguard for your online information, ensuring its safe and secure travel.
    --HTTPS uses encryption protocols like TLS (Transport Layer Security) or SSL (Secure Sockets Layer) to secure data transmitted between clients and servers.

Password sending using HTTP VS HTTPS:
    --HTTP: Sends the password "Surendra@123" as plain text, easily readable by anyone who captures the network data.
    --HTTPS: Encrypts the password "Surendra@123" (for example, to "9hdgfhdfe5a8d6b39a14c53b76f3f8"), making it extremely difficult for anyone to decode if someone captures the network data.